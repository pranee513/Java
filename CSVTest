import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.*;

/**
 * Created by pbathini on 2/14/2019.
 */
public class Test {

    public static void main(String args[]) throws IOException {

          //using try-with-resource to avoid using traditional try catch finally to close buffer reader
            try (BufferedReader br = new BufferedReader(new FileReader("/Users/pbathini/Desktop/csv.txt"))) {
                String readLine;
                while ((readLine = br.readLine()) != null) {
                    System.out.println("Raw CSV data: " + readLine);
                    System.out.println("Sorted by price data: " + sortedResultByPrice(readLine) + "\n");

                }
            } catch (IOException e) {
                e.printStackTrace();
            }

    }



    List<ArrayList<String>> csvLines = new ArrayList<ArrayList<String>>();
    Comparator<ArrayList<String>> comp = new Comparator<ArrayList<String>>() {
        public int compare(ArrayList<String> csvLine1, ArrayList<String> csvLine2) {
            // TODO here convert to Integer depending on field.
            // example is for numeric field 2
            return Integer.valueOf(csvLine1.get(2)).compareTo(Integer.valueOf(csvLine2.get(2)));
        }
    };
    Collections.sort(csvLines, comp);

    // Utility which converts CSV to Set using Split Operation
    public static Set<String> sortedResultByPrice(String readLine) {
         Set<String> CSVresult = new HashSet<String>();

        if (readLine != null) {
            String[] splitData = readLine.split("\\s*,\\s*");
            for (int i = 0; i < splitData.length; i++) {
                if (!(splitData[i] == null) || !(splitData[i].length() == 0)) {
                    CSVresult.add(splitData[i].trim());
                }
            }
        }

        return CSVresult;
    }
}
